@model ClaseModelo.Ficha

@{
    ViewBag.Title = "Create";
}

<br />
<div class="container-fluid">
    <div class="page-header">
        <div class="row">
            <div class="col-sm-6">
                <h3>Gestionar Fichas</h3>
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
                    <li class="breadcrumb-item">Fichas</li>
                    <li class="breadcrumb-item">General</li>
                    <li class="breadcrumb-item active">Registrar</li>
                </ol>
            </div>
            <div class="col-sm-6">

            </div>
        </div>
    </div>
</div>
<br />
@using (Html.BeginForm())
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header pb-0">
                        <h5>Registrar Oferta</h5>
                    </div>

                    <div class="card-body">
                        @Html.AntiForgeryToken()

                        <div class="row">
                            <div class="col-md-6">
                                <label for="estadoFiltro">Oferta</label>
                                @Html.DropDownList("IdOferta", null, "Selecciona una Oferta", new { @class = "js-select2 form-select col-sm-12 form-control", onchange = "cargarOfertas()" })
                                <br />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label for="estadoFiltro">Area de Conocimiento</label>
                                 @Html.DropDownList("Area", null, "Selecciona un Area", new { @class = "js-select2 form-select col-sm-12 form-control", onchange = "cargarProgramas()" })
                                <br />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label for="estadoFiltro">Programa de Formación</label>
                                @Html.DropDownList("IdPrograma",null , "Selecciona un Programa", new { @class = "js-select2 form-select col-sm-12 form-control" })
                            </div>
                            <div class="col-md-5">
                                <label class="form-label">Nivel Programa</label>
                                @*@Html.EditorFor(model => model.duracion, new { htmlAttributes = new { @class = "form-control" } })*@
                                <input type="text" readonly class="form-control" id="nivelProgramaInput" name="example-static-input-readonly" value="">
                                <br />
                            </div>
                            @Html.HiddenFor(model => model.EstadoFicha, new { Value = "True" })
                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                <label class="form-label" for="example-flatpickr-custom">Fecha Inicio</label>
                                @Html.EditorFor(model => model.FechaInFicha, new { htmlAttributes = new{ @class = "js-flatpickr form-control",placeholder = "d/m/Y",data_date_format = "d/m/Y"}})
                            </div>
                            <div class="col-md-3">
                                <label class="form-label" for="example-flatpickr-custom">Fecha Fin</label>
                                @Html.EditorFor(model => model.FechaFinFicha, new { htmlAttributes = new { @class = "js-flatpickr form-control", placeholder = "d/m/Y", data_date_format = "d/m/Y" } })
                            </div>
                            <div class="col-md-2">
                                <label class="form-label">No Aprendices</label>
                                @Html.EditorFor(model => model.NumAprenFicha, new { htmlAttributes = new { @class = "form-control"} })
                                @Html.HiddenFor(model => model.NumAprenFicha, new { Value = 30 })

                            </div>
                            <div class="col-md-2">
                                <label class="form-label">Codigo Programa</label>
                                @*@Html.EditorFor(model => model.duracion, new { htmlAttributes = new { @class = "form-control" } })*@
                                <input type="text" readonly class="form-control" id="codigoProgramaInput"name="example-static-input-readonly" value="">
                                <br />
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                <label class="form-label">Cantidad de Horas Programa</label>
                                @*@Html.EditorFor(model => model.duracion, new { htmlAttributes = new { @class = "form-control" } })*@
                                <input type="text" readonly class="form-control" id="horasProgramaInput" name="example-static-input-readonly" value="">
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">Codigo Ficha</label>
                                @Html.EditorFor(model => model.CodigoFicha, new { htmlAttributes = new { @class = "form-control", placeholder = "Ej: 2693606" } })
                                <br />
                            </div>
                            <div class="col-md-6">
                                <label for="estadoFiltro">Jornada</label>
                                @Html.DropDownListFor(model => model.JornadaFicha, new List<SelectListItem>
                                {
                                    new SelectListItem { Text = "", Value = "" },
                                    new SelectListItem { Text = "Diurna", Value = "Diurna" },
                                    new SelectListItem { Text = "Mixta", Value = "Mixta " },
                                    new SelectListItem { Text = "Nocturna", Value = "Nocturna" },
                                    new SelectListItem { Text = "Virtual", Value = "Virtual" },
                                    new SelectListItem { Text = "A Distancia", Value = "Distancia" },
                                    new SelectListItem { Text = "Otro", Value = "Otro" }
                                }, new { @class = "form-control" })
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-md-1">
                                <label class="form-label">Trim I</label>
                                @*@Html.EditorFor(model => model.duracion, new { htmlAttributes = new { @class = "form-control" } })*@
                                <input type="text" class="form-control form-control-alt" id="example-text-input-alt" name="example-text-input-alt" placeholder="0">
                            </div>
                            <div class="col-md-1">
                                <label class="form-label">Trim II</label>
                                @*@Html.EditorFor(model => model.duracion, new { htmlAttributes = new { @class = "form-control" } })*@
                                <input type="text" class="form-control form-control-alt" id="example-text-input-alt" name="example-text-input-alt" placeholder="0">
                            </div>
                            <div class="col-md-1">
                                <label class="form-label">Trim III</label>
                                @*@Html.EditorFor(model => model.duracion, new { htmlAttributes = new { @class = "form-control" } })*@
                                <input type="text" class="form-control form-control-alt" id="example-text-input-alt" name="example-text-input-alt" placeholder="1/6">
                            </div>
                            <div class="col-md-1">
                                <label class="form-label">Trim VI</label>
                                @*@Html.EditorFor(model => model.duracion, new { htmlAttributes = new { @class = "form-control" } })*@
                                <input type="text" class="form-control form-control-alt" id="example-text-input-alt" name="example-text-input-alt" placeholder="2/6">
                            </div>
                            <div class="col-md-2">
                               
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">Estado Oferta</label>
                                @*@Html.EditorFor(model => model.duracion, new { htmlAttributes = new { @class = "form-control" } })*@
                                <input type="text" class="form-control form-control-alt" id="estadoOfertaInput" name="example-text-input-alt" placeholder="">
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">Meta</label>
                                @*@Html.EditorFor(model => model.duracion, new { htmlAttributes = new { @class = "form-control" } })*@
                                <input type="text" class="form-control" id="example-text-input" name="example-text-input" placeholder="2024">
                                <br />
                            </div>

                        </div>
                    </div>
                </div>

                <div class="card-footer">
                    <button class="btn btn-primary m-r-15" type="submit">Registrar</button>
                    <button class="btn btn-light" type="button">
                        <a href="@Url.Action("Index","Programa_formacion")">Cancelar</a>
                    </button>
                </div>
            </div>
        </div>
    </div>

}

<script src="~/Scripts/jquery-3.7.1.min.js"></script>

<script>

    $(document).ready(function () {
        $("#NumAprenFicha").val(30);
    });

    function cargarOfertas() {
    var selectedOfertaId = $("#IdOferta").val();
    if (selectedOfertaId) {
        $.ajax({
            url: '@Url.Action("ObtenerAreasPorOferta", "Fichas")',
            type: 'GET',
            data: { idOferta: selectedOfertaId },
            success: function (data) {
                var areasSelect = $("#Area");
                areasSelect.empty();
                areasSelect.append($('<option></option>').val("").text("Selecciona una Area")); // Opción por defecto
                $.each(data, function (index, area) {
                    areasSelect.append($('<option></option>').val(area.Value).text(area.Text));
                });

                // Limpiar el select de Programas cuando se cambia la Oferta
                $("#IdPrograma").empty();
                $("#IdPrograma").append($('<option></option>').val("").text("Selecciona un Programa"));
            }
        });
    } else {
        // Limpiar ambos selects si no se selecciona una Oferta
        $("#Area").empty();
        $("#IdPrograma").empty();
        $("#Area").append($('<option></option>').val("").text("Selecciona una Area"));
        $("#IdPrograma").append($('<option></option>').val("").text("Selecciona un Programa"));
    }
}

    function cargarProgramas() {
        var selectedAreaId = $("#Area").val();
        if (selectedAreaId) {
            $.ajax({
                url: '@Url.Action("ObtenerProgramasPorArea", "Fichas")',
                type: 'GET',
                data: { idArea: selectedAreaId },
                success: function (data) {
                    var programasSelect = $("#IdPrograma");
                    programasSelect.empty();
                    programasSelect.append($('<option></option>').val("").text("Selecciona un Programa")); 
                    $.each(data, function (index, programa) {
                        programasSelect.append($('<option></option>').val(programa.Value).text(programa.Text));
                    });
                }
            });
        } else {
            $("#IdPrograma").empty();
            $("#IdPrograma").append($('<option></option>').val("").text("Selecciona un Programa"));
        }
    }

                @*function cargarProgramas() {
    var areaId = $("#Area").val();
    $.ajax({
        url: '@Url.Action("ObtenerProgramasPorAreas", "Fichas")',
        type: 'GET',
        data: { idArea: areaId },
        success: function (data) {
            var selectPrograma = $("#Programa");
            selectPrograma.empty();
            $.each(data, function (index, programa) {
                selectPrograma.append($('<option></option>').val(programa.Value).text(programa.Text));
            });
        }
    });
    }*@

    $(document).ready(function() {
    $("#IdPrograma").change(function() {
        var selectedProgramaId = $(this).val();

        $.ajax({
            url: '@Url.Action("ObtenerNivelPrograma", "Fichas")',
            type: 'GET',
            data: { idPrograma: selectedProgramaId },
            success: function (data) {
                $("#nivelProgramaInput").val(data);
            },
            error: function() {
                alert("Error al obtener el nivel del programa.");
            }
        });
    });
    });

        $(document).ready(function() {
            $("#IdPrograma").change(function() {
        var selectedProgramaId = $(this).val();

        $.ajax({
            url: '@Url.Action("ObtenerCodigoPrograma", "Fichas")',
            type: 'GET',
            data: { idPrograma: selectedProgramaId },
            success: function (data) {
                $("#codigoProgramaInput").val(data);
            },
            error: function() {
                alert("Error al obtener el codigo del programa.");
            }
        });
    });
        });

            $(document).ready(function() {
                $("#IdPrograma").change(function() {
        var selectedProgramaId = $(this).val();

        $.ajax({
            url: '@Url.Action("ObtenerHorasPrograma", "Fichas")',
            type: 'GET',
            data: { idPrograma: selectedProgramaId },
            success: function (data) {
                $("#horasProgramaInput").val(data);
            },
            error: function() {
                alert("Error al obtener las horas del programa.");
            }
        });
    });
            });

                $(document).ready(function() {
        $("#IdOferta").change(function() {
    var selectedOfertaId = $(this).val();

    $.ajax({
        url: '@Url.Action("ObtenerEstadoOferta", "Fichas")',
        type: 'GET',
        data: { idOferta: selectedOfertaId },
        success: function (data) {
            $("#estadoOfertaInput").val(data);
        },
        error: function() {
            alert("Error al obtener estado de la oferta.");
        }
    });
});
    });



</script>

