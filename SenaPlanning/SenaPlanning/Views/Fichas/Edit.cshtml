@model ClaseModelo.Ficha

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="content">
    <div class="content text-center">
        <div class="d-flex">
            <div class="flex-grow-1 mb-1 mb-md-0">
                <h1 class="h3 fw-bold mb-2">
                    Editar información de la ficha
                </h1>
            </div>
        </div>
    </div>

    <div class="form-horizontal block block-rounded">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdFicha)

        <div class="block-content block-content-full">

            <div class="row text-center">

                <div class="col-sm-3">
                    <div class="block block-rounded">
                        @Html.LabelFor(model => model.CodigoFicha, htmlAttributes: new { @class = "control-label block-content" })
                        <div class="block-content">
                            @Html.EditorFor(model => model.CodigoFicha, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CodigoFicha, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-3">
                    <div class="block block-rounded">
                        @Html.LabelFor(model => model.FechaInFicha, htmlAttributes: new { @class = "control-label block-content" })
                        <div class="block-content">
                            @Html.EditorFor(model => model.FechaInFicha, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FechaInFicha, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-3">
                    <div class="block block-rounded">
                        @Html.LabelFor(model => model.FechaFinFicha, htmlAttributes: new { @class = "control-label block-content" })
                        <div class="block-content">
                            @Html.EditorFor(model => model.FechaFinFicha, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FechaFinFicha, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-3">
                    <div class="block block-rounded">
                        @Html.LabelFor(model => model.JornadaFicha, htmlAttributes: new { @class = "control-label block-content" })
                        <div class="block-content">
                            @Html.EditorFor(model => model.JornadaFicha, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.JornadaFicha, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-3">
                    <div class="block block-rounded">
                        @Html.LabelFor(model => model.IdPrograma, htmlAttributes: new { @class = "control-label block-content" })
                        <div class="block-content">
                            @Html.DropDownList("IdPrograma", null, htmlAttributes: new { @class = "js-select2 form-select col-sm-12 form-control" })
                            @Html.ValidationMessageFor(model => model.IdPrograma, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-3">
                    <div class="block block-rounded">
                        @Html.LabelFor(model => model.IdOferta, htmlAttributes: new { @class = "control-label block-content" })
                        <div class="block-content">
                            @Html.DropDownList("IdOferta", null, htmlAttributes: new { @class = "js-select2 form-select col-sm-12 form-control" })
                            @Html.ValidationMessageFor(model => model.IdOferta, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="col-sm-3">
                    <div class="block block-rounded">
                        @Html.LabelFor(model => model.NumAprenFicha, htmlAttributes: new { @class = "control-label block-content" })
                        <div class="block-content">
                            @Html.EditorFor(model => model.NumAprenFicha, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NumAprenFicha, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-3">
                    <div class="block block-rounded">
                        @Html.LabelFor(model => model.EstadoFicha, htmlAttributes: new { @class = "control-label block-content" })
                        <div class="block-content">
                            @Html.EditorFor(model => model.EstadoFicha)
                            @Html.ValidationMessageFor(model => model.EstadoFicha, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-block text-end">
                    <div class="bcol-md-10">
                        <input type="submit" value="Guardar" class="btn btn-default" />
                        <a href="/Fichas" class="btn btn-default">Regresar</a>
                        @*@Html.ActionLink("Volver", "Index")*@
                    </div>
                </div>

            </div>

        </div>

    </div>

</div>
}
