@model ClaseModelo.Oferta

@{
    ViewBag.Title = "Create";
}




<br />
<div class="container-fluid">
    <div class="page-header">
        <div class="row">
            <div class="col-sm-6">
                <h3>Planeacion - Ofertas</h3>
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
                    <li class="breadcrumb-item">Planeación</li>
                    <li class="breadcrumb-item">General</li>
                    <li class="breadcrumb-item active">Registrar</li>
                </ol>
            </div>
            <div class="col-sm-6">

            </div>
        </div>
    </div>
</div>

<br />

@using (Html.BeginForm())
{
    <div class="card-body">
        <div class="block block-bordered">
            <div class="card-header pb-0">
                <h5>Registrar Oferta</h5>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="">
                        <div class="card-body">
                            @Html.AntiForgeryToken()
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="estadoFiltro">Nombre Indicativo - Oferta</label>
                                    @Html.EditorFor(model => model.NombreOferta, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                    @Html.ValidationMessageFor(m => m.NombreOferta)
                                    <br />
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label" for="example-flatpickr-custom">Fecha Inicio</label>
                                    @Html.EditorFor(model => model.FechaInicioOferta, new { htmlAttributes = new { @class = "js-flatpickr form-control", placeholder = "d/m/Y", required = "required" } })
                                    @Html.ValidationMessageFor(m => m.FechaInicioOferta)

                                    @*<input type="text" class="js-flatpickr form-control" id="example-flatpickr-custom" name="example-flatpickr-custom" placeholder="d/m/Y" data-date-format="d/m/Y">*@
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="estadoFiltro">Año de Meta a Indicar</label>
                                    @Html.DropDownList("IdMetas", null, "Selecciona una Meta", new { @class = "js-select2 form-select col-sm-12 form-control", required = "required" })
                                    @Html.ValidationMessageFor(m => m.IdMetas)

                                    <br />
                                </div>

                                <div class="col-md-6">
                                    <label for="estadoFiltro">Coordinador Responsable</label>
                                    @Html.DropDownList("IdUsuario", null, "Selecciona un Coordinador", new { @class = "js-select2 form-select col-sm-12 form-control", required = "required" })

                                    <br />
                                </div>
                            </div>

                            @Html.HiddenFor(model => model.EstadoOferta, new { Value = "True" })

                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <button class="btn btn-primary m-r-15" type="submit">Registrar</button>
                <button class="btn btn-light" type="button">
                    <a href="@Url.Action("Index","Planeacion")">Cancelar</a>
                </button>
            </div>
        </div>
    </div>
}
<script>
    // Elimina el atributo 'readonly' al cargar la página
    document.addEventListener('DOMContentLoaded', function() {
        document.getElementById('@Html.IdFor(model => model.IdOferta)').removeAttribute('readonly');
    });
    document.addEventListener('DOMContentLoaded', function () {
        var inputs = document.querySelectorAll('.form-control');
        inputs.forEach(function (input) {
            input.removeAttribute('readonly');
        });
    });
</script>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>

        One.helpersOnLoad(['jq-notify']);
        $(document).ready(function () {
            $('form').on('submit', function (e) {
                let isValid = true;

                const fieldsToValidate = [
                    'NombreOferta',
                    'FechaInicioOferta',
                    'IdMetas',
                    'IdUsuario'
                ];

                fieldsToValidate.forEach(function (field) {
                    const input = $(`#${field}`);
                    if (input.val().trim() === '') {
                        isValid = false;
                        input.addClass('is-invalid');
                    } else {
                        input.removeClass('is-invalid');
                    }
                });

                if (!isValid) {
                    e.preventDefault();
                    const Toast = Swal.mixin({
                        toast: true,
                        position: "top-end",
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.onmouseenter = Swal.stopTimer;
                            toast.onmouseleave = Swal.resumeTimer;
                        }
                    });
                    Toast.fire({
                        icon: "error",
                        title: "Por favor, complete todos los campos."
                    });
                }
            });
        });
    </script>
}



@*
    <div class="mb-3">
        <label class="form-label">Tipo Programa</label>
        <div class="input-group">
            <span class="input-group-text">A</span>
            @Html.DropDownListFor(model => model.Tipo_programa, new List<SelectListItem>
            {
                new SelectListItem { Text = "Tecnologo", Value = "Tecnologo" },
                new SelectListItem { Text = "Tecnico", Value = "Tecnico" },
                new SelectListItem { Text = "Especializacion", Value = "Especializacion" },
                new SelectListItem { Text = "Curso corto", Value = "Curso corto" },
                new SelectListItem { Text = "Curso Complementario", Value = "Curso Complementario" }
            }, new { @class = "form-control" })

        </div>
        @Html.ValidationMessageFor(model => model.Tipo_programa, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        <label class="form-label">Duración Programa</label>
        <div class="input-group">
            @Html.EditorFor(model => model.Duracion_programa, new { htmlAttributes = new { @class = "form-control" } })

        </div>
        @Html.ValidationMessageFor(model => model.Duracion_programa, "", new { @class = "text-danger" })
    </div>*@


@*<h2>Create</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Oferta</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CodigoOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CodigoOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CodigoOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HoraReqTrimIOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HoraReqTrimIOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HoraReqTrimIOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HoraReqTrimIIOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HoraReqTrimIIOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HoraReqTrimIIOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HoraReqTrimIIIOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HoraReqTrimIIIOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HoraReqTrimIIIOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HoraReqTrimIVOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HoraReqTrimIVOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HoraReqTrimIVOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CanInstPlantaOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CanInstPlantaOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CanInstPlantaOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HorasContTrimIOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HorasContTrimIOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HorasContTrimIOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HorasContTrimIIOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HorasContTrimIIOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HorasContTrimIIOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HorasContTrimIIIOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HorasContTrimIIIOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HorasContTrimIIIOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HorasContTrimIVOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HorasContTrimIVOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HorasContTrimIVOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CantidadInstContratoTrimIOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CantidadInstContratoTrimIOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CantidadInstContratoTrimIOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CantidadInstContratoTrimIIOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CantidadInstContratoTrimIIOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CantidadInstContratoTrimIIOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CantidadInstContratoTrimIIIOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CantidadInstContratoTrimIIIOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CantidadInstContratoTrimIIIOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CantidadInstContratoTrimIVOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CantidadInstContratoTrimIVOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CantidadInstContratoTrimIVOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TrimestreProgramadosOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TrimestreProgramadosOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TrimestreProgramadosOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TotalAprendicesOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TotalAprendicesOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TotalAprendicesOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TotalCursosNuevosOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TotalCursosNuevosOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TotalCursosNuevosOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TotalCursosEPtrimestreOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TotalCursosEPtrimestreOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TotalCursosEPtrimestreOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TotalCursosCursosNuevosOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TotalCursosCursosNuevosOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TotalCursosCursosNuevosOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TotalCursosOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TotalCursosOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TotalCursosOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CantidadTrimProgramadosOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CantidadTrimProgramadosOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CantidadTrimProgramadosOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CantidadTrimEPOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CantidadTrimEPOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CantidadTrimEPOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TotalInstaContratarOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TotalInstaContratarOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TotalInstaContratarOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AprenPasanOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AprenPasanOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AprenPasanOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AprenProgOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AprenProgOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AprenProgOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CursoOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CursoOferta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CursoOferta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IdUsuario, "IdUsuario", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdUsuario", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdUsuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IdMetas, "IdMetas", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdMetas", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdMetas, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EstadoOferta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.EstadoOferta)
                        @Html.ValidationMessageFor(model => model.EstadoOferta, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
