@model ClaseModelo.Programa_Formacion

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Programa_Formacion</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdPrograma)

        <div class="form-group">
            @Html.LabelFor(model => model.DenominacionPrograma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DenominacionPrograma, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DenominacionPrograma, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VersionPrograma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VersionPrograma, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VersionPrograma, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NivelPrograma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NivelPrograma, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NivelPrograma, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdArea, "IdArea", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdArea", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdArea, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstadoPrograma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.EstadoPrograma)
                    @Html.ValidationMessageFor(model => model.EstadoPrograma, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            const fields = [
                { selector: '#DenominacionPrograma', message: 'Este campo es obligatorio.' },
                { selector: '#VersionPrograma', message: 'Este campo es obligatorio.' },
                { selector: '#NivelPrograma', message: 'Este campo es obligatorio.' },
                { selector: '#IdArea', message: 'Selecciona un área de conocimiento.' }
            ];

            $('form').on('submit', function (e) {
                let isValid = true;

                fields.forEach(field => {
                    const input = $(field.selector);
                    if (input.val().trim() === '') {
                        isValid = false;
                        input.addClass('is-invalid');
                        input.next('.text-danger').text(field.message);
                    } else {
                        input.removeClass('is-invalid');
                        input.next('.text-danger').text('');
                    }
                });

                if (!isValid) {
                    e.preventDefault();
                    alert('Por favor, completa todos los campos obligatorios.');
                }
            });
        });
    </script>
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
