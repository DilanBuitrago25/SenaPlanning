@model ClaseModelo.Area_Conocimiento

@{
    ViewBag.Title = "Crear Red de conocimiento";
}

<br />
<div class="container-fluid">
    <div class="page-header">
        <div class="row">
            <div class="col-sm-6">
                <h3>Gestionar Areas</h3>
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Inicio</a></li>
                    <li class="breadcrumb-item">Area</li>
                    <li class="breadcrumb-item">General</li>
                    <li class="breadcrumb-item active">Registrar</li>
                </ol>
            </div>
            <div class="col-sm-6">

            </div>
        </div>
    </div>
</div>
<br />
@using (Html.BeginForm())
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="">
                    <div class="card-header pb-0">
                        <h5>Registrar Area de Conocimiento</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col">

                                @Html.AntiForgeryToken()
                                <form>
                                    @*<div class="mb-3 m-form__group">
                                            <label class="form-label">Codigo</label>
                                            <div class="input-group">
                                                @Html.EditorFor(model => model.CodigoArea, new { htmlAttributes = new { @class = "form-control" } })

                                            </div>
                                            @Html.ValidationMessageFor(model => model.CodigoArea, "", new { @class = "text-danger" })
                                        </div>*@
                                    <div class="mb-3 m-form__group">
                                        <label class="form-label">Nombre</label>
                                        <div class="input-group">
                                            @Html.EditorFor(model => model.NombreArea, new { htmlAttributes = new { @class = "form-control", required = "required" } })

                                        </div>
                                        @Html.ValidationMessageFor(model => model.NombreArea, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="mb-3 m-form__group">
                                        <label class="form-label">Red de Conocimiento</label>
                                        <div class="input-group">
                                            @Html.DropDownList("IdRed", null, "Selecciona una Red de Conocimiento", htmlAttributes: new { @class = "js-example-basic-single col-sm-12 form-control" })
                                        </div>
                                        @Html.ValidationMessageFor(model => model.IdRed, "", new { @class = "text-danger" })
                                    </div>

                                    @Html.HiddenFor(model => model.EstadoArea, new { Value = "True" })

                                </form>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <button class="btn btn-primary m-r-15" type="submit">Registrar</button>
                        <button class="btn btn-light" type="button"><a href="@Url.Action("Index","Area_Conocimiento")">Cancelar</a></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>$(document).ready(function () {
            $('form').on('submit', function (e) {
                let isValid = true;

                const nombreInput = $('#NombreArea');
                if (nombreInput.val().trim() === '') {
                    isValid = false;
                    nombreInput.addClass('is-invalid');
                    nombreInput.next('.text-danger').text('Este campo es obligatorio.');
                } else {
                    nombreInput.removeClass('is-invalid');
                    nombreInput.next('.text-danger').text('');
                }

                const redInput = $('#IdRed');
                if (redInput.val() === null) {
                    isValid = false;
                    redInput.addClass('is-invalid');
                    redInput.next('.text-danger').text('Selecciona una Red de Conocimiento.');
                } else {
                    redInput.removeClass('is-invalid');
                    redInput.next('.text-danger').text('');
                }

                if (!isValid) {
                    e.preventDefault();
                    const Toast = Swal.mixin({
                        toast: true,
                        position: "top-end",
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.onmouseenter = Swal.stopTimer;
                            toast.onmouseleave = Swal.resumeTimer;
                        }
                    });
                    Toast.fire({
                        icon: "error",
                        title: "Por favor, complete todos los campos."
                    });
                }
            });
        });</script>
}